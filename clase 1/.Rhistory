numf(120000, 0)
numf <- function(num, dec) {
return(format(num, big.mark = ".", decimal.mark = ",", nsmall = dec))
}
numf(120000, 0)
numf <- function(num, dec)=0 {
numf <- function(num, dec=0) {
return(format(num, big.mark = ".", decimal.mark = ",", nsmall = dec))
}
ptUsa <- sum(df$Population)*1000
mediaVida <- mean(df$Life.Exp)
medianaIngreso <- median(df$Income)*1000
print(glue("USA tiene {numf(ptUsa)} habitantes"))
print(glue("La media de vida es de {numf(mediaVida, 1)} años"))
print(glue("La mediana de ingreso en ARS (a 1000ARS/USD) es de {numf(medianaIngreso)}"))
numf <- function(num, dec=0) {
return(format(round(num, dec), big.mark = ".", decimal.mark = ",", nsmall = dec))
}
ptUsa <- sum(df$Population)*1000
mediaVida <- mean(df$Life.Exp)
medianaIngreso <- median(df$Income)*1000
print(glue("USA tiene {numf(ptUsa)} habitantes"))
print(glue("La media de vida es de {numf(mediaVida, 1)} años"))
print(glue("La mediana de ingreso en ARS (a 1000ARS/USD) es de {numf(medianaIngreso)}"))
df_indice <- df$[Illiteracy, Murder]
df_indice <- df[, c['Illiteracy', 'Murder']
df_indice
df_indice <- df[, c('Illiteracy', 'Murder')]
df_indice
df_indice <- df[, c('Illiteracy', 'Murder')]
df_indice$IlliMurd <- df_indice$Illiteracy+df_indice$Murder
df_indice
df_indice <- df[, c('Illiteracy', 'Murder')]
df_indice$ilit_murd <- df_indice$Illiteracy+df_indice$Murder
df_indice
df_indice <- df[, c('Illiteracy', 'Murder')]
df_indice$ilit_murd <- df_indice$Illiteracy+df_indice$Murder
max_ilit_murd <- max(df_indice$ilit_murd)
min_ilit_murd <- min(df_indice$ilit_murd)
print (glue("ilit_murd está entre {min_ilit_murd} y {max_ilit_murd"))
df_indice <- df[, c('Illiteracy', 'Murder')]
df_indice$ilit_murd <- df_indice$Illiteracy+df_indice$Murder
max_ilit_murd <- max(df_indice$ilit_murd)
min_ilit_murd <- min(df_indice$ilit_murd)
print (glue("ilit_murd está entre {min_ilit_murd} y {max_ilit_murd}"))
OBJETO <- 6+6
VECO <- sample(0:10, size = 10, replace = TRUE)
OBJETO <- 6+6
VECO <- sample(0:10, size = 10, replace = TRUE)
VECO
OBJETO <- 6+6
VECO <- sample(0:10, size = 10, replace = TRUE)
VECO
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
for elem in VEC0 {
for (elem in VEC0) {
print (elem*3)
}
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- rep(length(VEC0),"vec")
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- rep("vec", length(VEC0))
VEC4
VEC3
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- paste(rep("VEC", length(VEC0)), VEC0)
VEC4
VEC3
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
DFRAME=data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
DFRAME
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
DFRAME=data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
print (DFRAME)
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
DFRAME.head()
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
head(DFRAME)
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
length(DFRAME)
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
shape(DFRAME)
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
)
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
DFRAME
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
class(DFRAME)
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
nrow(DFRAME)
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame("VEC0"=VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
nrow(DFRAME)
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame("VEC0"=VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
DFRAME
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
DFRAME
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
DFRAME
LA_LISTA=list(OBJETO, VEC3, DFRAME)
LA_LISTA
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
DFRAME
LA_LISTA=list(OBJETO, VEC3, DFRAME)
LA_LISTA
LA_LISTA2=[OBJETO, VEC3]
OBJETO <- 6+6
VEC0 <- sample(0:10, size = 10, replace = TRUE)
VEC1 <- VEC0 * 2
VEC2 <- VEC0 ** 2
VEC3 <- VEC0 - 2
VEC0
VEC1
VEC2
VEC3
VEC4 <- paste(rep("VEC", length(VEC0)), VEC1)
VEC5 <- paste(rep("VEC", length(VEC0)), VEC2)
VEC6 <- paste(rep("VEC", length(VEC0)), VEC3)
VEC4
VEC5
VEC6
DFRAME <- data.frame(VEC0, VEC1, VEC2, VEC3, VEC4, VEC5, VEC6)
DFRAME
LA_LISTA=list(OBJETO, VEC3, DFRAME)
LA_LISTA
LA_LISTA2=[1, 2]
for (elem in VEC0) {
print (elem*3)
}
unicos=unique(DFRAME$VEC6)
unicos
acumulado2 <- function(data, variable){
df <- as.data.frame(data)
tibble('frecuencia_poblacional' = sum(df[,variable]), 'frecuencia_muestral' = nrow(df))
}
acumulado2(individual_T120, "PONDERA")
library(glue)
# 1) Dataset EPH
# El INDEC1 publica las bases de microdatos de la Encuesta Permanente de Hogares (EPH). Para este ejercicio deberán descargar la base “usu_individual_T120.txt” que corresponde a la base Individual del 1er trimestre de 2020 y se encuentra disponible en el campus.
#
# a) Levantar y guardar la base en un objeto llamado individualt120. La misma usa como separador “;”.
tiempo_read_table <- system.time({
individualt120 <- read.table("./usu_individual_T122.txt.txt", sep = ";", header = TRUE)
})
#
# b)Visualizar el contenido del dataset. Hint: Se puede utilizar la funcion glimpse() de la libreria tibble para visualizar el contenido de la base, identificando dimensión, tipos de variables y primeros valores de cada una.
#
library (tibble)
glimpse(individualt120)
# c) Guardar la base como un archivo de extensión .RDS con la función saveRDS() y volver a levantarla pero desde el nuevo archivo .RDS y asignarla con el nombre BaseRDS ¿tarda más o menos?sa
saveRDS(individualt120, file="./individualt120.rds")
tiempo_readRDS <- system.time({
individualt120 <- readRDS(file="./individualt120.rds")
})
print ("Tiempo que demora read_table: ")
print(tiempo_read_table)
print ("Tiempo que demora read_RDS: ")
print(tiempo_readRDS)
# 2) Función acumulado
# a- Crear una función acumulado que calcule el valor acumulado (suma) de una variable numérica a designar X en un dataset también a designar df. Es decir, que brinde el valor resultante de acumulado(df, X).
acumulado <- function(df, X){
return (sum(df[[X]]))
}
#
# b- Evalúela para la columna “PONDERA” del dataframe individual_T120.
paste0("El acumulado de PONDERA es ", acumulado(individualt120, "PONDERA"))
#
# c- Utilizar dicha función para calcular el acumulado de PONDERA por Sexo (variable CH04), sabiendo que 1 = varón y 2 = mujer.
varones <- individualt120[individualt120$CH04==1,]
mujeres <- individualt120[individualt120$CH04==2,]
pondera_varón <- acumulado(varones, "PONDERA")
pondera_mujer <- acumulado(mujeres, "PONDERA")
glue ('El acumulado de PONDERA para varones es {pondera_varón}')
glue ('El acumulado de PONDERA para mujeres es {pondera_mujer}')
#
# d- Modificar la función anterior ( acumulado2) para que devuelva un vector que contenga la frecuencia poblacional (el acumulado calculado previamente) y la muestral (número de filas del dataset).
acumulado2 <- function(df, X){
tibble('frecuencia_poblacional' = sum(df[[X]]), 'frecuencia_muestral' = nrow(df))
}
print (acumulado2(individualt120, "PONDERA"))
print ("NO IMPRIME NADA")
df <- individualt120
print(tibble('a'=1, 'b'=2))
# e- Utilizar la función modificada para calcular la frecuencias frecuencias muestrales y poblacionales por Sexo.
# 2) Función acumulado
# a- Crear una función acumulado que calcule el valor acumulado (suma) de una variable numérica a designar X en un dataset también a designar df. Es decir, que brinde el valor resultante de acumulado(df, X).
acumulado <- function(df, X){
return (sum(df[[X]]))
}
#
# b- Evalúela para la columna “PONDERA” del dataframe individual_T120.
paste0("El acumulado de PONDERA es ", acumulado(individualt120, "PONDERA"))
#
# c- Utilizar dicha función para calcular el acumulado de PONDERA por Sexo (variable CH04), sabiendo que 1 = varón y 2 = mujer.
varones <- individualt120[individualt120$CH04==1,]
mujeres <- individualt120[individualt120$CH04==2,]
pondera_varón <- acumulado(varones, "PONDERA")
pondera_mujer <- acumulado(mujeres, "PONDERA")
glue ('El acumulado de PONDERA para varones es {pondera_varón}')
glue ('El acumulado de PONDERA para mujeres es {pondera_mujer}')
#
# d- Modificar la función anterior ( acumulado2) para que devuelva un vector que contenga la frecuencia poblacional (el acumulado calculado previamente) y la muestral (número de filas del dataset).
acumulado2 <- function(df, X){
tibble('frecuencia_poblacional' = sum(df[[X]]), 'frecuencia_muestral' = nrow(df))
}
print (acumulado2(individualt120, "PONDERA"))
print ("NO IMPRIME NADA")
df <- individualt120
print(tibble('a'=1, 'b'=2))
# e- Utilizar la función modificada para calcular la frecuencias frecuencias muestrales y poblacionales por Sexo.
# 2) Función acumulado
# a- Crear una función acumulado que calcule el valor acumulado (suma) de una variable numérica a designar X en un dataset también a designar df. Es decir, que brinde el valor resultante de acumulado(df, X).
acumulado <- function(df, X){
return (sum(df[[X]]))
}
#
# b- Evalúela para la columna “PONDERA” del dataframe individual_T120.
paste0("El acumulado de PONDERA es ", acumulado(individualt120, "PONDERA"))
#
# c- Utilizar dicha función para calcular el acumulado de PONDERA por Sexo (variable CH04), sabiendo que 1 = varón y 2 = mujer.
varones <- individualt120[individualt120$CH04==1,]
mujeres <- individualt120[individualt120$CH04==2,]
pondera_varón <- acumulado(varones, "PONDERA")
pondera_mujer <- acumulado(mujeres, "PONDERA")
glue ('El acumulado de PONDERA para varones es {pondera_varón}')
glue ('El acumulado de PONDERA para mujeres es {pondera_mujer}')
#
# d- Modificar la función anterior ( acumulado2) para que devuelva un vector que contenga la frecuencia poblacional (el acumulado calculado previamente) y la muestral (número de filas del dataset).
acumulado2 <- function(df, X){
tibble('frecuencia_poblacional' = sum(df[[X]]), 'frecuencia_muestral' = nrow(df))
}
print (acumulado2(individualt120, "PONDERA"))
# e- Utilizar la función modificada para calcular la frecuencias frecuencias muestrales y poblacionales por Sexo.
# 2) Función acumulado
# a- Crear una función acumulado que calcule el valor acumulado (suma) de una variable numérica a designar X en un dataset también a designar df. Es decir, que brinde el valor resultante de acumulado(df, X).
acumulado <- function(df, X){
return (sum(df[[X]]))
}
#
# b- Evalúela para la columna “PONDERA” del dataframe individual_T120.
paste0("El acumulado de PONDERA es ", acumulado(individualt120, "PONDERA"))
#
# c- Utilizar dicha función para calcular el acumulado de PONDERA por Sexo (variable CH04), sabiendo que 1 = varón y 2 = mujer.
varones <- individualt120[individualt120$CH04==1,]
mujeres <- individualt120[individualt120$CH04==2,]
pondera_varón <- acumulado(varones, "PONDERA")
pondera_mujer <- acumulado(mujeres, "PONDERA")
glue ('El acumulado de PONDERA para varones es {pondera_varón}')
glue ('El acumulado de PONDERA para mujeres es {pondera_mujer}')
#
# d- Modificar la función anterior ( acumulado2) para que devuelva un vector que contenga la frecuencia poblacional (el acumulado calculado previamente) y la muestral (número de filas del dataset).
acumulado2 <- function(df, X){
tibble('frecuencia_poblacional' = sum(df[[X]]), 'frecuencia_muestral' = nrow(df))
}
print (acumulado2(individualt120, "PONDERA"))
# e- Utilizar la función modificada para calcular la frecuencias frecuencias muestrales y poblacionales por Sexo.
acumulado2(varones, "PONDERA")
acumulado2(mujeres, "PONDERA")
